package main

import (
	"fmt"
	"path/filepath"
	"strings"

	"github.com/ysmood/kit"
	"github.com/ysmood/lookpath"
)

var slash = filepath.FromSlash

func main() {
	lint()

	js, err := kit.ReadString(slash("lib/js/rod.js"))
	kit.E(err)

	tpl := fmt.Sprintf(`// generated by running "go generate" on project root

package js

// Rod js
var Rod = %s
`,
		"`"+encode(js)+"`",
	)

	kit.E(kit.OutputFile(slash("lib/js/rod.go"), tpl, nil))
}

func lint() {
	defer kit.CD(slash("lib/js"))()

	eslint, err := lookpath.LookPath(slash("node_modules/.bin"), "eslint")

	// install eslint if we don't have it
	if err != nil {
		kit.Exec("npm", "i").MustDo()
		eslint, err = lookpath.LookPath(slash("node_modules/.bin"), "eslint")
		kit.E(err)
	}

	kit.Exec(eslint, "--fix", ".").MustDo()
}

// not using encoding like base64 or gzip because of they will make git diff every large for small change
func encode(s string) string {
	return strings.ReplaceAll(s, "`", "` + \"`\" + `")
}
