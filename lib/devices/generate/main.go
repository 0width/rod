package main

import (
	"strings"

	"github.com/go-rod/rod/lib/assets"
	"github.com/go-rod/rod/lib/utils"
	"github.com/ysmood/kit"
)

func main() {
	list := kit.JSON(assets.DeviceList)

	code := ``
	for _, d := range list.Array() {
		name := d.Get("device.title").String()
		code += kit.S(`
			// {{.name}} type
			{{.name}} DeviceType = "{{.title}}"
		`, "name", normalizeName(name), "title", name)
	}

	code = kit.S(`// generated by running "go generate" on project root

		package devices

		const (
			{{.code}}
		)
	`, "code", code)

	path := "./lib/devices/types.go"
	utils.E(kit.OutputFile(path, code, nil))

	kit.Exec("gofmt", "-s", "-w", path).MustDo()
	kit.Exec("goimports", "-w", path).MustDo()
	kit.Exec("misspell", "-w", "-q", path).MustDo()
}

func normalizeName(name string) string {
	name = strings.ReplaceAll(name, "/", "or")

	list := []string{}
	for _, s := range strings.Split(name, " ") {
		if len(s) > 1 {
			list = append(list, strings.ToUpper(s[0:1])+s[1:])
		} else {
			list = append(list, strings.ToUpper(s))
		}
	}

	return strings.Join(list, "")
}
